//Jake Shankman
//Parallel 2 Period 7
//1/30/13
#include <stdio.h>
#include <math.h>
int main(void)
{
  //Eye
  double ex = 0.500000;
  double ey = 0.500000;
  double ez = -1.000000;
  //
  //Screen
  double z = 0.000000;
  //
  double array[3][7];
  //Sphere 0
  array[0][0] = 0.500000;
  array[0][1] = 0.500000;
  array[0][2] = 0.166667;
  array[0][3] = 0.166667;
  array[0][4] = 0.0;
  array[0][5] = 0.0;
  array[0][6] = 255.0;
  
  //Sphere 1
  array[1][0] = 0.833333;
  array[1][1] = 0.500000;
  array[1][2] = 0.500000;
  array[1][3] = 0.166667;
  array[1][4] = 0.0;
  array[1][5] = 255.0;
  array[1][6] = 0.0;

  //Sphere 2
  array[2][0] = 0.333333;
  array[2][1] = 0.666667;
  array[2][2] = 0.666667;
  array[2][3] = 0.333333;
  array[2][4] = 255.0;
  array[2][5] = 0.0;
  array[2][6] = 0.0;

  FILE *fout = fopen("ray1.ppm", "w");
  fprintf(fout, "P3\n 400 300\n 255\n");
  int i, j;
  for(j = 0; j < 300; ++j)
    {
      for(i = 0; i < 400; ++i)
      {
    double px = 1.0*i/400;
    double py = 1.0*j/300;
    double pz = 0.0;
    
    double dx = px - ex;
    double dy = py - ey;
    double dz = pz - ez;
    
    double magnitude = sqrt(dx*dx + dy*dy + dz*dz);
    
    dx /= magnitude;
    dy /= magnitude;
    dz /= magnitude;
    
    int sphere = -1;
    int s;
    double tmin;
    for(s = 0; s < 3; ++s)
    {
      double a, b, c;
      a = 1.0;
      b = 2*(dx*(ex - array[s][0]) + dy*(ey - array[s][1]) + dz*(ez - array[s][2]));
      c = pow((ex - array[s][0]), 2) + pow((ey - array[s][1]), 2) + pow((ez - array[s][2]), 2) -(array[s][3] * array[s][3]);
      double t;
      if(pow(b, 2) - 4*a*c > 0)
      {
	double t1 = (-b - sqrt(b*b - 4*a*c))/(2 * a);
	double t2 = (-b + sqrt(b*b - 4*a*c))/(2 * a);
	t = fmin(t1, t2);
      
    
      if(sphere < 0 || t < tmin)
      {
	sphere = s;
	tmin = t;
      }
	
      }
    }
    if(sphere == -1)
    {
      fprintf(fout, "0 0 0\n");
    }
    else
    {
      fprintf(fout, "%i %i %i\n", (int) array[sphere][4], (int) array[sphere][5], (int)array[sphere][6]);
    }
    
    }
    
   }
  
  fclose(fout); 
  return 0;
}